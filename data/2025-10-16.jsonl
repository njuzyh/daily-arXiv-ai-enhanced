{"id": "2510.12889", "categories": ["cs.DC", "C.2.4"], "pdf": "https://arxiv.org/pdf/2510.12889", "abs": "https://arxiv.org/abs/2510.12889", "authors": ["Wei Da", "Evangelia Kalyvianaki"], "title": "Dodoor: Efficient Randomized Decentralized Scheduling with Load Caching for Heterogeneous Tasks and Clusters", "comment": "single column,20 pages and 8 figures", "summary": "This paper introduces Dodoor, an efficient randomized decentralized scheduler\ndesigned for task scheduling in modern data centers. Dodoor leverages advanced\nresearch on the weighted balls-into-bins model with b-batched setting. Unlike\nother decentralized schedulers that rely on real-time probing of remote\nservers, Dodoor makes scheduling decisions based on cached server information,\nwhich is updated in batches, to reduce communication overheads. To schedule\ntasks with dynamic, multidimensional resource requirements in heterogeneous\ncluster, Dodoor uses a novel load score to measure servers' loads for each\nscheduled task. This score captures the anti-affinity between servers and tasks\nin contrast to the commonly used heuristic of counting pending tasks to balance\nload. On a 101-node heterogeneous cluster, Dodoor is evaluated using two\nworkloads: (i) simulated Azure virtual machines placements and (ii) real\nserverless Python functions executions in Docker. The evaluation shows that\nDodoor reduces scheduling messages by 55--66% on both workloads. Dodoor can\nalso increase throughput by up to 33.2% and 21.5%, reduce mean makespan latency\nby 12.1% and 7.2%, and improve tail latency by 21.9% and 24.6% across the two\nworkloads."}
{"id": "2510.13203", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.13203", "abs": "https://arxiv.org/abs/2510.13203", "authors": ["Mehdi Zekriyapanah Gashti"], "title": "Scrutiny new framework in integrated distributed reliable systems", "comment": null, "summary": "In this paper we represent a new framework for integrated distributed\nsystems. In the proposed framework we have used three parts to increase\nSatisfaction and Performance of this framework. At first we analyse integrated\nsystems and their evolution process and also ERPSD and ERPDRT framework briefly\nthen we explain the new FDIRS framework. Finally we compare the results of\nsimulation of the new framework with presented frameworks. Result showed In\nFIDRS framework, the technique of heterogeneous distributed data base is used\nto improve Performance and speed in responding to users. Finally by using FDIRS\nframework we succeeded to increase Efficiency, Performance and reliability of\nintegrated systems and remove some of previous frameworks problems."}
{"id": "2510.13223", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.13223", "abs": "https://arxiv.org/abs/2510.13223", "authors": ["Yiyuan He", "Minxian Xu", "Jingfeng Wu", "Jianmin Hu", "Chong Ma", "Min Shen", "Le Chen", "Chengzhong Xu", "Lin Qu", "Kejiang Ye"], "title": "BanaServe: Unified KV Cache and Dynamic Module Migration for Balancing Disaggregated LLM Serving in AI Infrastructure", "comment": "23 pages", "summary": "Large language models (LLMs) are increasingly deployed in AI infrastructure,\ndriving the need for high throughput, resource efficient serving systems.\nDisaggregated LLM serving, which separates prompt prefill from auto-regressive\ndecode, has emerged as a promising architecture by isolating their\nheterogeneous compute and memory demands. However, current disaggregated\nsystems face three key limitations: (i) static resource allocation cannot adapt\nto highly dynamic workloads, causing over-provisioning that wastes resources or\nunder-provisioning that violates service level objectives (SLOs); (ii) inherent\nload imbalance between prefill and decode stages, where prefill is\ncompute-bound and decode is memory-bound, causes under-utilization in one tier\nwhile the other becomes a bottleneck; and (iii) prefix cache aware routing\nskews load distribution, as high cache hit rate prefill nodes attract\ndisproportionately more requests, further degrading balance and efficiency. To\naddress these issues, we present BanaServe, a dynamic orchestration framework\nthat continuously rebalances computational and memory resources across prefill\nand decode instances while eliminating hotspots induced by cache. BanaServe\nintroduces layer level weight migration, attention level Key Value Cache (KV\nCache) migration, and Global KV Cache Store sharing with layer wise overlapped\ntransmission, enabling both coarse grained (layer level) and fine grained\n(attention level) load redistribution with minimal latency overhead. These\nmechanisms allow routers to perform purely load aware scheduling, unconstrained\nby cache placement. Compared to vLLM, BanaServe achieves 1.2x-3.9x higher\nthroughput with 3.9%-78.4% lower total processing time, and outperforms\nDistServe by 1.1x-2.8x in throughput with 1.4%-70.1% latency reduction."}
{"id": "2510.13306", "categories": ["cs.DC", "cs.DS"], "pdf": "https://arxiv.org/pdf/2510.13306", "abs": "https://arxiv.org/abs/2510.13306", "authors": ["Jannick Borowitz", "Ernestine Gro√ümann", "Mattthias Schimek"], "title": "Distributed Reductions for the Maximum Weight Independent Set Problem", "comment": null, "summary": "Finding maximum-weight independent sets in graphs is an important NP-hard\noptimization problem. Given a vertex-weighted graph $G$, the task is to find a\nsubset of pairwise non-adjacent vertices of $G$ with maximum weight. Most\nrecently published practical exact algorithms and heuristics for this problem\nuse a variety of data-reduction rules to compute (near-)optimal solutions.\nApplying these rules results in an equivalent instance of reduced size. An\noptimal solution to the reduced instance can be easily used to construct an\noptimal solution for the original input.\n  In this work, we present the first distributed-memory parallel reduction\nalgorithms for this problem, targeting graphs beyond the scale of previous\nsequential approaches. Furthermore, we propose the first distributed\nreduce-and-greedy and reduce-and-peel algorithms for finding a maximum weight\nindependent set heuristically.\n  In our practical evaluation, our experiments on up to $1024$ processors\ndemonstrate good scalability of our distributed reduce algorithms while\nmaintaining good reduction impact. Our asynchronous reduce-and-peel approach\nachieves an average speedup of $33\\times$ over a sequential state-of-the-art\nreduce-and-peel approach on 36 real-world graphs with a solution quality close\nto the sequential algorithm. Our reduce-and-greedy algorithms even achieve\naverage speedups of up to $50\\times$ at the cost of a lower solution quality.\nMoreover, our distributed approach allows us to consider graphs with more than\none billion vertices and 17 billion edges."}
{"id": "2510.12896", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.12896", "abs": "https://arxiv.org/abs/2510.12896", "authors": ["Ekram Hossain", "Angelo Vera-Rivera"], "title": "Toward Hyper-Dimensional Connectivity in Beyond 6G: A Conceptual Framework", "comment": null, "summary": "Cellular wireless networks enable mobile broadband connectivity for\nInternet-based applications through their radio access and core network\ninfrastructure. While Fifth-Generation (5G) cellular systems are currently\nbeing deployed, ongoing research on cellular technologies primarily focuses on\nSixth-Generation (6G) networks to set the stage for developing standards for\nthese systems. Therefore, the time has come to articulate the visions for\nbeyond 6G (B6G) systems. In this article, we present a visionary framework\ntoward hyper-dimensional connectivity in B6G that enables wireless access to\nhyper-immersive Internet technologies. Our contributions include a conceptual\nframework for B6G cellular systems with jointly integrated communication,\ncognition, computing, and cyber-physical capabilities as core connectivity\ndimensions, a set of technical definitions outlining potential use cases and\nsystem-level requirements, a mapping of prospective technology enablers, and a\nforward-looking research agenda for B6G systems. The conceptual discussions in\nthis article would be helpful for identifying innovation drivers, shaping\nlong-term technical goals, and defining research agendas for the future of\nmobile broadband technologies."}
{"id": "2510.13147", "categories": ["cs.AR", "cs.LG", "cs.PF", "C.1.4"], "pdf": "https://arxiv.org/pdf/2510.13147", "abs": "https://arxiv.org/abs/2510.13147", "authors": ["Faraz Tahmasebi", "Michael Pelluer", "Hyoukjun Kwon"], "title": "D-com: Accelerating Iterative Processing to Enable Low-rank Decomposition of Activations", "comment": "12 pages, 13 figures", "summary": "The computation and memory costs of large language models kept increasing\nover last decade, which reached over the scale of 1T parameters. To address the\nchallenges from the large scale models, model compression techniques such as\nlow-rank decomposition have been explored. Previous model decomposition works\nhave focused on weight decomposition to avoid costly runtime decomposition,\nwhose latency often significantly exceeds the benefits from decomposition\n(e.g., 38% more end-to-end latency when running Llama2-7b on A100 with 4K\nsequence length with activation decomposition compared to no decomposition). In\nthis work, we debunk such observations and report that the input decomposition\ncan be significantly beneficial with a proper choice of decomposition algorithm\nand hardware support. We adopt progressive decomposition algorithm, Lanczos\nalgorithm, and design a co-accelerator architecture for the decomposition\nalgorithm. To address the memory- boundness of the decomposition operation, we\nintroduce a novel compute replication methodology that moves the op- eration\ntoward compute-bound region, which enables 6.2x speedup in our evaluation. We\nalso develop an output shape- preserving computation scheme that eliminates\ndecomposi- tion costs in consecutive layers. To compensate model quality loss\nfrom compression, we introduce a multi-track decom- position approach that\nseparately handles outlier channels for high accuracy and low perplexity with\nminimal compu- tational costs. Combined together, our accelerator, D-com,\nprovides 22% end-to-end latency improvements compared to A100 GPU at the cost\nof small model quality degradation (e.g., 3% on AI2 Reasoning Challenge task)."}
{"id": "2510.13447", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.13447", "abs": "https://arxiv.org/abs/2510.13447", "authors": ["Julian Legler", "Sebastian Werner", "Maria C. Borges", "Stefan Tai"], "title": "Service-Level Energy Modeling and Experimentation for Cloud-Native Microservices", "comment": "Accepted at ICSOC 2025", "summary": "Microservice architectures have become the dominant paradigm for cloud-native\nsystems, offering flexibility and scalability. However, this shift has also led\nto increased demand for cloud resources, contributing to higher energy\nconsumption and carbon emissions. While existing research has focused on\nmeasuring fine-grained energy usage of CPU and memory at the container level,\nor on system-wide assessments, these approaches often overlook the energy\nimpact of cross-container service interactions, especially those involving\nnetwork and storage for auxiliary services such as observability and system\nmonitoring. To address this gap, we introduce a service-level energy model that\ncaptures the distributed nature of microservice execution across containers.\nOur model is supported by an experimentation tool that accounts for energy\nconsumption not just in CPU and memory, but also in network and storage\ncomponents. We validate our approach through extensive experimentation with\ndiverse experiment configurations of auxiliary services for a popular\nopen-source cloud-native microservice application. Results show that omitting\nnetwork and storage can lead to an underestimation of auxiliary service energy\nuse by up to 63%, highlighting the need for more comprehensive energy\nassessments in the design of energy-efficient microservice architectures."}
{"id": "2510.13031", "categories": ["cs.NI", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2510.13031", "abs": "https://arxiv.org/abs/2510.13031", "authors": ["Pragya Sharma", "Shihua Sun", "Shachi Deshpande", "Angelos Stavrou", "Haining Wang"], "title": "Towards xApp Conflict Evaluation with Explainable Machine Learning and Causal Inference in O-RAN", "comment": null, "summary": "The Open Radio Access Network (O-RAN) architecture enables a flexible,\nvendor-neutral deployment of 5G networks by disaggregating base station\ncomponents and supporting third-party xApps for near real-time RAN control.\nHowever, the concurrent operation of multiple xApps can lead to conflicting\ncontrol actions, which may cause network performance degradation. In this work,\nwe propose a framework for xApp conflict management that combines explainable\nmachine learning and causal inference to evaluate the causal relationships\nbetween RAN Control Parameters (RCPs) and Key Performance Indicators (KPIs). We\nuse model explainability tools such as SHAP to identify RCPs that jointly\naffect the same KPI, signaling potential conflicts, and represent these\ninteractions as a causal Directed Acyclic Graph (DAG). We then estimate the\ncausal impact of each of these RCPs on their associated KPIs using metrics such\nas Average Treatment Effect (ATE) and Conditional Average Treatment Effect\n(CATE). This approach offers network operators guided insights into identifying\nconflicts and quantifying their impacts, enabling more informed and effective\nconflict resolution strategies across diverse xApp deployments."}
{"id": "2510.13362", "categories": ["cs.AR"], "pdf": "https://arxiv.org/pdf/2510.13362", "abs": "https://arxiv.org/abs/2510.13362", "authors": ["Angelos Athanasiadis", "Nikolaos Tampouratzis", "Ioannis Papaefstathiou"], "title": "Energy-Efficient FPGA Framework for Non-Quantized Convolutional Neural Networks", "comment": "9th International Workoshop on Microsystems, International Hellenic\n  University", "summary": "The growing demand for real-time processing in artificial intelligence\napplications, particularly those involving Convolutional Neural Networks\n(CNNs), has highlighted the need for efficient computational solutions.\nConventional processors, very often, fall short in balancing performance, power\nconsumption, and latency, especially in embedded systems and edge computing\nplatforms. Field-Programmable Gate Arrays (FPGAs) offer a promising\nalternative, combining high performance with energy efficiency and\nreconfigurability. The presented framework addresses the complex and demanding\ncomputations of CNNs on FPGAs maintaining full precision in all neural network\nparameters. Specifically, our framework is based on Darknet which is very\nwidely used for the design of CNNs and allows the designer, by using a similar\ninput to that given to Darknet, to efficiently implement a CNN in a\nheterogeneous system comprising of CPUs and FPGAs. When compared with the FPGA\nframeworks that support quantization, our solution aims to offer similar\nperformance and/or energy efficiency without any degradation on the NN\naccuracy."}
{"id": "2510.13668", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.13668", "abs": "https://arxiv.org/abs/2510.13668", "authors": ["Zhibin Wang", "Zetao Hong", "Xue Li", "Zibo Wang", "Shipeng Li", "Qingkai Meng", "Qing Wang", "Chengying Huan", "Rong Gu", "Sheng Zhong", "Chen Tian"], "title": "Adaptive Rescheduling in Prefill-Decode Disaggregated LLM Inference", "comment": null, "summary": "Large Language Model (LLM) inference has emerged as a fundamental paradigm.\nIn real-world scenarios, variations in output length cause severe workload\nimbalance in the decode phase, particularly for long-output reasoning tasks.\nExisting systems, such as PD disaggregation architectures, rely on static\nprefill-to-decode scheduling, which often results in SLO violations and OOM\nfailures under evolving decode workloads.\n  In this paper, we propose ARES, an adaptive decoding rescheduling system\npowered by length prediction to anticipate future workloads. Our core\ncontributions include: (1) A lightweight and continuous LLM-native prediction\nmethod that leverages LLM hidden state to model remaining generation length\nwith high precision (reducing MAE by 49.42%) and low overhead (cutting\npredictor parameters by 93.28%); (2) A rescheduling solution in decode phase\nwith : A dynamic balancing mechanism that integrates current and predicted\nworkloads, reducing P99 TPOT by 74.77% and achieving up to 2.24 times higher\ngoodput."}
{"id": "2510.13248", "categories": ["cs.NI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.13248", "abs": "https://arxiv.org/abs/2510.13248", "authors": ["Yunze Wei", "Kaiwen Wei", "Shibo Du", "Jianyu Wang", "Zhangzhong Liu", "Yawen Wang", "Zhanyou Li", "Congcong Miao", "Xiaohui Xie", "Yong Cui"], "title": "Automated Network Protocol Testing with LLM Agents", "comment": null, "summary": "Network protocol testing is fundamental for modern network infrastructure.\nHowever, traditional network protocol testing methods are labor-intensive and\nerror-prone, requiring manual interpretation of specifications, test case\ndesign, and translation into executable artifacts, typically demanding one\nperson-day of effort per test case. Existing model-based approaches provide\npartial automation but still involve substantial manual modeling and expert\nintervention, leading to high costs and limited adaptability to diverse and\nevolving protocols. In this paper, we propose a first-of-its-kind system called\nNeTestLLM that takes advantage of multi-agent Large Language Models (LLMs) for\nend-to-end automated network protocol testing. NeTestLLM employs hierarchical\nprotocol understanding to capture complex specifications, iterative test case\ngeneration to improve coverage, a task-specific workflow for executable\nartifact generation, and runtime feedback analysis for debugging and\nrefinement. NeTestLLM has been deployed in a production environment for several\nmonths, receiving positive feedback from domain experts. In experiments,\nNeTestLLM generated 4,632 test cases for OSPF, RIP, and BGP, covering 41\nhistorical FRRouting bugs compared to 11 by current national standards. The\nprocess of generating executable artifacts also improves testing efficiency by\na factor of 8.65x compared to manual methods. NeTestLLM provides the first\npractical LLM-powered solution for automated end-to-end testing of\nheterogeneous network protocols."}
{"id": "2510.13401", "categories": ["cs.AR", "cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.13401", "abs": "https://arxiv.org/abs/2510.13401", "authors": ["Jude Haris", "Jos√© Cano"], "title": "F-BFQ: Flexible Block Floating-Point Quantization Accelerator for LLMs", "comment": "Accepted to Workshop on New Approaches for Addressing the Computing\n  Requirements of LLMs and GNNs (LG-ARC) @ ISCA 2025", "summary": "Large Language Models (LLMs) have become increasingly prominent for daily\ntasks, from improving sound-totext translation to generating additional frames\nfor the latest video games. With the help of LLM inference frameworks, such as\nllama.cpp, which support optimizations such as KV-caching and quantization, it\nis now easier than ever to deploy LLMs on edge devices. Quantization is\nfundamental to enable LLMs on resource-constrained edge devices, and llama.cpp\nutilizes block floating point (BFP) quantization to drastically reduce the bit\nwidth of weights and input tensors, the memory footprint, and the computational\npower required to run LLMs. LLMs are typically quantized with mixed BFP\nquantization across the model layers to reduce the loss of model accuracy due\nto quantization. Therefore, to efficiently accelerate across the layers of\nBFP-quantized LLMs, specialized accelerators need to support different BFP\nvariants without reconfiguration. To address this issue, we propose a Flexible\nBlock FloatingPoint Quantization (F-BFQ) accelerator, which can dynamically\nswitch between two BFP quantization variants and perform matrix multiplication\n(MatMul) operations. Our initial F-BFQ accelerator design, deployed on the AMD\nKria board, reduces inference time by 1.4x on average over the Arm NEON-based\nCPU execution across three BFP quantized LLMs while achieving 5.2 tokens per\nsecond (~3.9 words per second)."}
{"id": "2510.13724", "categories": ["cs.DC", "cs.AI", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.13724", "abs": "https://arxiv.org/abs/2510.13724", "authors": ["Aditya Tanikanti", "Benoit C√¥t√©", "Yanfei Guo", "Le Chen", "Nickolaus Saint", "Ryan Chard", "Ken Raffenetti", "Rajeev Thakur", "Thomas Uram", "Ian Foster", "Michael E. Papka", "Venkatram Vishwanath"], "title": "FIRST: Federated Inference Resource Scheduling Toolkit for Scientific AI Model Access", "comment": null, "summary": "We present the Federated Inference Resource Scheduling Toolkit (FIRST), a\nframework enabling Inference-as-a-Service across distributed High-Performance\nComputing (HPC) clusters. FIRST provides cloud-like access to diverse AI\nmodels, like Large Language Models (LLMs), on existing HPC infrastructure.\nLeveraging Globus Auth and Globus Compute, the system allows researchers to run\nparallel inference workloads via an OpenAI-compliant API on private, secure\nenvironments. This cluster-agnostic API allows requests to be distributed\nacross federated clusters, targeting numerous hosted models. FIRST supports\nmultiple inference backends (e.g., vLLM), auto-scales resources, maintains\n\"hot\" nodes for low-latency execution, and offers both high-throughput batch\nand interactive modes. The framework addresses the growing demand for private,\nsecure, and scalable AI inference in scientific workflows, allowing researchers\nto generate billions of tokens daily on-premises without relying on commercial\ncloud infrastructure."}
{"id": "2510.13467", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.13467", "abs": "https://arxiv.org/abs/2510.13467", "authors": ["Enhan Li", "Hongyang Du", "Kaibin Huang"], "title": "NetMCP: Network-Aware Model Context Protocol Platform for LLM Capability Extension", "comment": null, "summary": "Large Language Models (LLMs) remain static in functionality after training,\nand extending their capabilities requires integration with external data,\ncomputation, and services. The Model Context Protocol (MCP) has emerged as a\nstandard interface for such extensions, but current implementations rely solely\non semantic matching between users' requests and server function descriptions,\nwhich makes current deployments and simulation testbeds fragile under latency\nfluctuations or server failures. We address this gap by enhancing MCP tool\nrouting algorithms with real-time awareness of network and server status. To\nprovide a controlled test environment for development and evaluation, we\nconstruct a heterogeneous experimental platform, namely Network-aware MCP\n(NetMCP), which offers five representative network states and build a benchmark\nfor latency sequence generation and MCP server datasets. On top of NetMCP\nplatform, we analyze latency sequences and propose a Semantic-Oriented and\nNetwork-Aware Routing (SONAR) algorithm, which jointly optimizes semantic\nsimilarity and network Quality of Service (QoS) metrics for adaptive tool\nrouting. Results show that SONAR consistently improves task success rate and\nreduces completion time and failure number compared with semantic-only,\nLLM-based baselines, demonstrating the value of network-aware design for\nproduction-scale LLM systems. The code for NetMCP is available at\nhttps://github.com/NICE-HKU/NetMCP."}
{"id": "2510.13755", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.13755", "abs": "https://arxiv.org/abs/2510.13755", "authors": ["Timoth√© Albouy", "Antonio Fern√°ndez Anta", "Chryssis Georgiou", "Nicolas Nicolaou", "Junlang Wang"], "title": "Tight Conditions for Binary-Output Tasks under Crashes", "comment": null, "summary": "This paper explores necessary and sufficient system conditions to solve\ndistributed tasks with binary outputs (\\textit{i.e.}, tasks with output values\nin $\\{0,1\\}$). We focus on the distinct output sets of values a task can\nproduce (intentionally disregarding validity and value multiplicity),\nconsidering that some processes may output no value. In a distributed system\nwith $n$ processes, of which up to $t \\leq n$ can crash, we provide a complete\ncharacterization of the tight conditions on $n$ and $t$ under which every class\nof tasks with binary outputs is solvable, for both synchronous and asynchronous\nsystems. This output-set approach yields highly general results: it unifies\nmultiple distributed computing problems, such as binary consensus and symmetry\nbreaking, and it produces impossibility proofs that hold for stronger task\nformulations, including those that consider validity, account for value\nmultiplicity, or move beyond binary outputs."}
{"id": "2510.13664", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.13664", "abs": "https://arxiv.org/abs/2510.13664", "authors": ["Muhammad Haseeb", "Jinkun Geng", "Radhika Mittal", "Aurojit Panda", "Srinivas Narayana", "Anirudh Sivaraman"], "title": "Fair Ordering", "comment": null, "summary": "A growing class of applications demands \\emph{fair ordering/sequencing} of\nevents which ensures that events generated earlier by one client are processed\nbefore later events from other clients. However, achieving such sequencing is\nfundamentally challenging due to the inherent limitations of clock\nsynchronization. We advocate for an approach that embraces, rather than\neliminates, clock variability. Instead of attempting to remove error from a\ntimestamp, Tommy, our proposed system, leverages a statistical model to compare\ntwo noisy timestamps probabilistically by learning per-clock offset\ndistributions. Our preliminary statistical model computes the probability that\none event precedes another w.r.t. the wall-clock time without access to the\nwall-clock. This serves as a foundation for a new relation:\n\\emph{likely-happened-before} denoted by $\\xrightarrow{p}$ where $p$ represents\nthe probability of an event to have happened before another. The\n$\\xrightarrow{p}$ relation provides a basis for ordering multiple events which\nare otherwise considered \\emph{concurrent} by the typical\n\\emph{happened-before} ($\\rightarrow$) relation. We highlight various related\nchallenges including intransitivity of $\\xrightarrow{p}$ relation as opposed to\nthe transitive $\\rightarrow$ relation. We also outline several research\ndirections: online fair sequencing, stochastically fair total ordering,\nhost-level support for fairness and more."}
{"id": "2510.13401", "categories": ["cs.AR", "cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.13401", "abs": "https://arxiv.org/abs/2510.13401", "authors": ["Jude Haris", "Jos√© Cano"], "title": "F-BFQ: Flexible Block Floating-Point Quantization Accelerator for LLMs", "comment": "Accepted to Workshop on New Approaches for Addressing the Computing\n  Requirements of LLMs and GNNs (LG-ARC) @ ISCA 2025", "summary": "Large Language Models (LLMs) have become increasingly prominent for daily\ntasks, from improving sound-totext translation to generating additional frames\nfor the latest video games. With the help of LLM inference frameworks, such as\nllama.cpp, which support optimizations such as KV-caching and quantization, it\nis now easier than ever to deploy LLMs on edge devices. Quantization is\nfundamental to enable LLMs on resource-constrained edge devices, and llama.cpp\nutilizes block floating point (BFP) quantization to drastically reduce the bit\nwidth of weights and input tensors, the memory footprint, and the computational\npower required to run LLMs. LLMs are typically quantized with mixed BFP\nquantization across the model layers to reduce the loss of model accuracy due\nto quantization. Therefore, to efficiently accelerate across the layers of\nBFP-quantized LLMs, specialized accelerators need to support different BFP\nvariants without reconfiguration. To address this issue, we propose a Flexible\nBlock FloatingPoint Quantization (F-BFQ) accelerator, which can dynamically\nswitch between two BFP quantization variants and perform matrix multiplication\n(MatMul) operations. Our initial F-BFQ accelerator design, deployed on the AMD\nKria board, reduces inference time by 1.4x on average over the Arm NEON-based\nCPU execution across three BFP quantized LLMs while achieving 5.2 tokens per\nsecond (~3.9 words per second)."}
{"id": "2510.13689", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.13689", "abs": "https://arxiv.org/abs/2510.13689", "authors": ["Zhiyuan He", "Yi Xu", "Cheng Luo", "Lili Qiu", "Yuqing Yang"], "title": "Optimize Replica Server Placement in a Satellite Network", "comment": "14 pages, two columns", "summary": "Satellite communication offers Internet connectivity to remote locations,\nsuch as villages, deserts, mountains, and at sea. However, transmitting content\nover satellite networks is significantly more expensive than traditional\nInternet. To address this issue, we propose placing content replica servers\nwithin satellite networks and optimizing replica placement for important\nperformance metrics, such as latency, transmission, and storage cost. Our\napproach can support different types of satellite networks, including Low Earth\nOrbit (LEO), Medium Earth Orbit (MEO), Geostationary Orbit (GEO), and their\ncombinations. An important challenge for supporting content replicas in such\nnetworks is that LEO and MEO satellites are constantly moving. We address this\nchallenge by explicitly considering their moving trajectories and strategically\noptimizing not only client performance, but also the cost of transferring\ncontent from one satellite to another as needed. We demonstrate the\neffectiveness of our approach using both simulated traffic traces and a\nprototype system."}
{"id": "2510.13710", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.13710", "abs": "https://arxiv.org/abs/2510.13710", "authors": ["Rohan Bose", "Jinwei Zhao", "Tanya Shreedhar", "Jianping Pan", "Nitinder Mohan"], "title": "Investigating Web Content Delivery Performance over Starlink", "comment": "12 pages, 14 figures, LEO Satellite Networks, Content Delivery\n  Networks, Domain Name System, Internet Measurements", "summary": "Low Earth Orbit (LEO) satellite ISPs promise universal Internet connectivity,\nyet their interaction with content delivery remains poorly understood. We\npresent the first comprehensive measurement study decomposing Starlink's web\ncontent delivery performance decomposed across Point of Presence (PoP), DNS,\nand CDN layers. Through two years of measurements combining 225K Cloudflare AIM\ntests, M-Lab data, and active probing from 99 RIPE Atlas and controlled\nStarlink probes, we collect 6.1M traceroutes and 10.8M DNS queries to quantify\nhow satellite architecture disrupts terrestrial CDN assumptions. We identify\nthree distinct performance regimes based on infrastructure density. Regions\nwith local content-rich PoPs achieve near-terrestrial latencies with the\nsatellite segment dominating 80-90% of RTT. Infrastructure-sparse regions\nsuffer cascading penalties: remote PoPs force distant resolver selection, which\ntriggers CDN mis-localization, pushing latencies beyond 200 ms.\nDense-infrastructure regions show minimal sensitivity to PoP changes.\nLeveraging Starlink's infrastructure expansion in early 2025 as a natural\nexperiment, we demonstrate that relocating PoPs closer to user location reduces\nmedian page-fetch times by 60%. Our findings reveal that infrastructure\nproximity, not satellite coverage, influences web performance, requiring\nfundamental changes to CDN mapping and DNS resolution for satellite ISPs."}
{"id": "2510.13732", "categories": ["cs.NI", "cs.IT", "math.IT"], "pdf": "https://arxiv.org/pdf/2510.13732", "abs": "https://arxiv.org/abs/2510.13732", "authors": ["Mohd Saif Ali Khan", "Karthik RM", "Samar Agnihotri"], "title": "Scalable Pilot Assignment for Distributed Massive MIMO using Channel Estimation Error", "comment": null, "summary": "Pilot contamination remains a major bottleneck in realizing the full\npotential of distributed massive MIMO systems. We propose two dynamic and\nscalable pilot assignment strategies designed for practical deployment in such\nnetworks. First, we present a low complexity centralized algorithm that\nsequentially assigns pilots to user equipments (UEs) to minimize the global\nchannel estimation errors across serving access points (APs). This improves the\nchannel estimation quality and reduces interference among UEs, enhancing the\nspectral efficiency. Second, we develop a fully distributed algorithm that uses\na priority-based pilot selection approach. In this algorithm, each selected AP\nminimizes estimation error using only local information and offers candidate\npilots to the UEs. Every UE then selects a suitable pilot based on AP priority.\nThis approach ensures consistency and minimizes interference while\nsignificantly reducing pilot contamination. The method requires no global\ncoordination, maintains low signaling overhead, and adapts dynamically to the\nUE deployment. Numerical simulations demonstrate the superiority of our\nproposed schemes in terms of network throughput when compared to other\nstate-of-the-art benchmark schemes."}
