{"id": "2510.15109", "categories": ["cs.NI", "cs.AI", "cs.DC", "cs.LG", "eess.SP"], "pdf": "https://arxiv.org/pdf/2510.15109", "abs": "https://arxiv.org/abs/2510.15109", "authors": ["Utku Demir", "Tugba Erpek", "Yalin E. Sagduyu", "Sastry Kompella", "Mengran Xue"], "title": "Targeted Attacks and Defenses for Distributed Federated Learning in Vehicular Networks", "comment": null, "summary": "In emerging networked systems, mobile edge devices such as ground vehicles\nand unmanned aerial system (UAS) swarms collectively aggregate vast amounts of\ndata to make machine learning decisions such as threat detection in remote,\ndynamic, and infrastructure-constrained environments where power and bandwidth\nare scarce. Federated learning (FL) addresses these constraints and privacy\nconcerns by enabling nodes to share local model weights for deep neural\nnetworks instead of raw data, facilitating more reliable decision-making than\nindividual learning. However, conventional FL relies on a central server to\ncoordinate model updates in each learning round, which imposes significant\ncomputational burdens on the central node and may not be feasible due to the\nconnectivity constraints. By eliminating dependence on a central server,\ndistributed federated learning (DFL) offers scalability, resilience to node\nfailures, learning robustness, and more effective defense strategies. Despite\nthese advantages, DFL remains vulnerable to increasingly advanced and stealthy\ncyberattacks. In this paper, we design sophisticated targeted training data\npoisoning and backdoor (Trojan) attacks, and characterize the emerging\nvulnerabilities in a vehicular network. We analyze how DFL provides resilience\nagainst such attacks compared to individual learning and present effective\ndefense mechanisms to further strengthen DFL against the emerging cyber\nthreats."}
{"id": "2510.15210", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.15210", "abs": "https://arxiv.org/abs/2510.15210", "authors": ["Chenrui Hu", "Ziyu Cheng", "Di Wu", "Yuxiao Wang", "Feng Liu", "Zhimin Qiu"], "title": "Structural Generalization for Microservice Routing Using Graph Neural Networks", "comment": null, "summary": "This paper focuses on intelligent routing in microservice systems and\nproposes an end-to-end optimization framework based on graph neural networks.\nThe goal is to improve routing decision efficiency and overall system\nperformance under complex topologies. The method models invocation\nrelationships among microservices as a graph. In this graph, service nodes and\ncommunication links are treated as graph nodes and edges. Multi-dimensional\nfeatures such as node states, link latency, and call frequency are used as\ninput. A multi-layer graph neural network is employed to perform high-order\ninformation aggregation and structural modeling. The model outputs a score for\neach candidate service path. These scores are then used to guide dynamic\nrouting decisions. To improve the model's ability to assess path quality, an\nedge-aware attention mechanism is introduced. This mechanism helps the model\ncapture instability and bottleneck risks in service communications more\naccurately. The paper also conducts a systematic analysis of the model's\nperformance under different network depths, topology densities, and service\nscales. It evaluates the effectiveness of the method in terms of routing\naccuracy, prediction error, and system stability. Experimental results show\nthat the proposed method outperforms existing mainstream strategies across\nmultiple key metrics. It handles highly dynamic and concurrent microservice\nenvironments effectively and demonstrates strong performance, robustness, and\nstructural generalization."}
{"id": "2510.15373", "categories": ["cs.NI"], "pdf": "https://arxiv.org/pdf/2510.15373", "abs": "https://arxiv.org/abs/2510.15373", "authors": ["Pranay Agarwal", "D. Manjunath"], "title": "Content and Access Networks Synergies: Tradeoffs in Public and Private Investments by Content Providers", "comment": null, "summary": "The ubiquity of smartphones has fueled content consumption worldwide, leading\nto an ever-increasing demand for a better Internet experience. This has\nnecessitated an upgrade of the capacity of the access network. The Internet\nservice providers (ISPs) have been demanding that the content providers (CPs)\nshare the cost of upgrading access network infrastructure. A \\emph{public\ninvestment} in the infrastructure of a neutral ISP will boost the profit of the\nCPs, and hence, seems a rational strategy. A CP can also make a \\emph{private\ninvestment} in its infrastructure and boost its profits. In this paper, we\nstudy the trade-off between public and private investments by a CP when the\ndecision is made under different types of interaction between them.\nSpecifically, we consider four interaction models between CPs -- centralized\nallocation, cooperative game, non-cooperative game, and a bargaining game --\nand determine the public and private investment for each model. Via numerical\nresults, we evaluate the impact of different incentive structures on the\nutility of the CPs. We see that the bargaining game can result in higher public\ninvestment than the non-cooperative and centralized models. However, this\nbenefit gets reduced if the CPs are incentivized to invest in private\ninfrastructure."}
{"id": "2510.15802", "categories": ["cs.NI", "C.2.2; C.2.3; C.2.5"], "pdf": "https://arxiv.org/pdf/2510.15802", "abs": "https://arxiv.org/abs/2510.15802", "authors": ["Tommaso Bonato", "Sepehr Abdous", "Abdul Kabbani", "Ahmad Ghalayini", "Nadeen Gebara", "Terry Lam", "Anup Agarwal", "Tiancheng Chen", "Zhuolong Yu", "Konstantin Taranov", "Mahmoud Elhaddad", "Daniele De Sensi", "Soudeh Ghorbani", "Torsten Hoefler"], "title": "Uno: A One-Stop Solution for Inter- and Intra-Datacenter Congestion Control and Reliable Connectivity", "comment": null, "summary": "Cloud computing and AI workloads are driving unprecedented demand for\nefficient communication within and across datacenters. However, the coexistence\nof intra- and inter-datacenter traffic within datacenters plus the disparity\nbetween the RTTs of intra- and inter-datacenter networks complicates congestion\nmanagement and traffic routing. Particularly, faster congestion responses of\nintra-datacenter traffic causes rate unfairness when competing with slower\ninter-datacenter flows. Additionally, inter-datacenter messages suffer from\nslow loss recovery and, thus, require reliability. Existing solutions overlook\nthese challenges and handle inter- and intra-datacenter congestion with\nseparate control loops or at different granularities. We propose Uno, a unified\nsystem for both inter- and intra-DC environments that integrates a transport\nprotocol for rapid congestion reaction and fair rate control with a load\nbalancing scheme that combines erasure coding and adaptive routing. Our\nfindings show that Uno significantly improves the completion times of both\ninter- and intra-DC flows compared to state-of-the-art methods such as Gemini."}
{"id": "2510.15744", "categories": ["cs.AR", "cs.PF"], "pdf": "https://arxiv.org/pdf/2510.15744", "abs": "https://arxiv.org/abs/2510.15744", "authors": ["Haocong Luo", "Ataberk Olgun", "Maria Makeenkova", "F. Nisa Bostanci", "Geraldo F. Oliveira", "A. Giray Yaglikci", "Onur Mutlu"], "title": "Cleaning up the Mess", "comment": null, "summary": "A MICRO 2024 best paper runner-up publication (the Mess paper) with all three\nartifact badges awarded (including \"Reproducible\") proposes a new benchmark to\nevaluate real and simulated memory system performance. In this paper, we\ndemonstrate that the Ramulator 2.0 simulation results reported in the Mess\npaper are incorrect and, at the time of the publication of the Mess paper,\nirreproducible. We find that the authors of Mess paper made multiple trivial\nhuman errors in both the configuration and usage of the simulators. We show\nthat by correctly configuring Ramulator 2.0, Ramulator 2.0's simulated memory\nsystem performance actually resembles real system characteristics well, and\nthus a key claimed contribution of the Mess paper is factually incorrect. We\nalso identify that the DAMOV simulation results in the Mess paper use wrong\nsimulation statistics that are unrelated to the simulated DRAM performance.\nMoreover, the Mess paper's artifact repository lacks the necessary sources to\nfully reproduce all the Mess paper's results.\n  Our work corrects the Mess paper's errors regarding Ramulator 2.0 and\nidentifies important issues in the Mess paper's memory simulator evaluation\nmethodology. We emphasize the importance of both carefully and rigorously\nvalidating simulation results and contacting simulator authors and developers,\nin true open source spirit, to ensure these simulators are used with correct\nconfigurations and as intended. We encourage the computer architecture\ncommunity to correct the Mess paper's errors. This is necessary to prevent the\npropagation of inaccurate and misleading results, and to maintain the\nreliability of the scientific record. Our investigation also opens up questions\nabout the integrity of the review and artifact evaluation processes. To aid\nfuture work, our source code and scripts are openly available at https:\n//github.com/CMU-SAFARI/ramulator2/tree/mess."}
{"id": "2510.15095", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.15095", "abs": "https://arxiv.org/abs/2510.15095", "authors": ["Md Sabbir Hossain Polak", "David Troendle", "Byunghyun Jang"], "title": "Hive Hash Table: A Warp-Cooperative, Dynamically Resizable Hash Table for GPUs", "comment": null, "summary": "Hash tables are essential building blocks in data-intensive applications, yet\nexisting GPU implementations often struggle with concurrent updates, high load\nfactors, and irregular memory access patterns. We present Hive hash table, a\nhigh-performance, warp-cooperative and dynamically resizable GPU hash table\nthat adapts to varying workloads without global rehashing.\n  Hive hash table makes three key contributions. First, a cache-aligned packed\nbucket layout stores key-value pairs as 64-bit words, enabling coalesced memory\naccess and atomic updates via single-CAS operations. Second, warp-synchronous\nconcurrency protocols - Warp-Aggregated-Bitmask-Claim (WABC) and\nWarp-Cooperative Match-and-Elect (WCME) - reduce contention to one atomic\noperation per warp while ensuring lock-free progress. Third, a\nload-factor-aware dynamic resizing strategy expands or contracts capacity in\nwarp-parallel K-bucket batches using linear hashing, maintaining balanced\noccupancy. To handle insertions under heavy contention, Hive hash table employs\na four-step strategy: replace, claim-and-commit, bounded cuckoo eviction, and\noverflow-stash fallback. This design provides lock-free fast paths and bounded\nrecovery cost under contention determined by a fixed eviction depth, while\neliminating ABA hazards during concurrent updates.\n  Experimental evaluation on an NVIDIA RTX 4090 shows Hive hash table sustains\nload factors up to 95% while delivering 1.5-2x higher throughput than\nstate-of-the-art GPU hash tables (Slab-Hash, DyCuckoo, WarpCore) under mixed\ninsert-delete-lookup workloads. On balanced workload, Hive hash table reaches\n3.5 billion updates/s and nearly 4 billion lookups/s, demonstrating scalability\nand efficiency for GPU-accelerated data processing."}
{"id": "2510.15122", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.15122", "abs": "https://arxiv.org/abs/2510.15122", "authors": ["François Ezard", "Can Umut Ileri", "Jérémie Decouchant"], "title": "NEMO: Faster Parallel Execution for Highly Contended Blockchain Workloads (Full version)", "comment": "This is the full version of a paper that will appear at the 7th\n  Conference on Blockchain Research & Applications for Innovative Networks and\n  Services (BRAINS 2025)", "summary": "Following the design of more efficient blockchain consensus algorithms, the\nexecution layer has emerged as the new performance bottleneck of blockchains,\nespecially under high contention. Current parallel execution frameworks either\nrely on optimistic concurrency control (OCC) or on pessimistic concurrency\ncontrol (PCC), both of which see their performance decrease when workloads are\nhighly contended, albeit for different reasons. In this work, we present NEMO,\na new blockchain execution engine that combines OCC with the object data model\nto address this challenge. NEMO introduces four core innovations: (i) a greedy\ncommit rule for transactions using only owned objects; (ii) refined handling of\ndependencies to reduce re-executions; (iii) the use of incomplete but\nstatically derivable read/write hints to guide execution; and (iv) a\npriority-based scheduler that favors transactions that unblock others. Through\nsimulated execution experiments, we demonstrate that NEMO significantly reduces\nredundant computation and achieves higher throughput than representative\napproaches. For example, with 16 workers NEMO's throughput is up to 42% higher\nthan the one of Block-STM, the state-of-the-art OCC approach, and 61% higher\nthan the pessimistic concurrency control baseline used."}
{"id": "2510.15147", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.15147", "abs": "https://arxiv.org/abs/2510.15147", "authors": ["Aditya Bhosale", "Kavitha Chandrasekar", "Laxmikant Kale", "Sara Kokkila-Schumacher"], "title": "An Elastic Job Scheduler for HPC Applications on the Cloud", "comment": null, "summary": "The last few years have seen an increase in adoption of the cloud for running\nHPC applications. The pay-as-you-go cost model of these cloud resources has\nnecessitated the development of specialized programming models and schedulers\nfor HPC jobs for efficient utilization of cloud resources. A key aspect of\nefficient utilization is the ability to rescale applications on the fly to\nmaximize the utilization of cloud resources. Most commonly used parallel\nprogramming models like MPI have traditionally not supported autoscaling either\nin a cloud environment or on supercomputers. While more recent work has been\ndone to implement this functionality in MPI, it is still nascent and requires\nadditional programmer effort. Charm++ is a parallel programming model that\nnatively supports dynamic rescaling through its migratable objects paradigm. In\nthis paper, we present a Kubernetes operator to run Charm++ applications on a\nKubernetes cluster. We then present a priority-based elastic job scheduler that\ncan dynamically rescale jobs based on the state of a Kubernetes cluster to\nmaximize cluster utilization while minimizing response time for high-priority\njobs. We show that our elastic scheduler, with the ability to rescale HPC jobs\nwith minimal overhead, demonstrates significant performance improvements over\ntraditional static schedulers."}
{"id": "2510.15215", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.15215", "abs": "https://arxiv.org/abs/2510.15215", "authors": ["Zhimin Qiu", "Feng Liu", "Yuxiao Wang", "Chenrui Hu", "Ziyu Cheng", "Di Wu"], "title": "Spatiotemporal Traffic Prediction in Distributed Backend Systems via Graph Neural Networks", "comment": null, "summary": "This paper addresses the problem of traffic prediction in distributed backend\nsystems and proposes a graph neural network based modeling approach to overcome\nthe limitations of traditional models in capturing complex dependencies and\ndynamic features. The system is abstracted as a graph with nodes and edges,\nwhere node features represent traffic and resource states, and adjacency\nrelations describe service interactions. A graph convolution mechanism enables\nmulti order propagation and aggregation of node features, while a gated\nrecurrent structure models historical sequences dynamically, thus integrating\nspatial structures with temporal evolution. A spatiotemporal joint modeling\nmodule further fuses graph representation with temporal dependency, and a\ndecoder generates future traffic predictions. The model is trained with mean\nsquared error to minimize deviations from actual values. Experiments based on\npublic distributed system logs construct combined inputs of node features,\ntopology, and sequences, and compare the proposed method with mainstream\nbaselines using MSE, RMSE, MAE, and MAPE. Results show that the proposed method\nachieves stable performance and low error across different prediction horizons\nand model depths, significantly improving the accuracy and robustness of\ntraffic forecasting in distributed backend systems and verifying the potential\nof graph neural networks in complex system modeling."}
{"id": "2510.15330", "categories": ["cs.DC", "cs.AI", "cs.CL", "cs.NI"], "pdf": "https://arxiv.org/pdf/2510.15330", "abs": "https://arxiv.org/abs/2510.15330", "authors": ["Tella Rajashekhar Reddy", "Atharva Deshmukh", "Karan Tandon", "Rohan Gandhi", "Anjaly Parayil", "Debopam Bhattacherjee"], "title": "BeLLMan: Controlling LLM Congestion", "comment": "To be presented at FAISYS 2025", "summary": "Large language model (LLM) applications are blindfolded to the infrastructure\nunderneath and generate tokens autoregressively, indifferent to the system\nload, thus risking inferencing latency inflation and poor user experience. Our\nfirst-cut controller, named beLLMan, enables the LLM infrastructure to actively\nand progressively signal the first-party LLM application to adjust the output\nlength in response to changing system load. On a real testbed with H100 GPUs,\nbeLLMan helps keep inferencing latency under control (upto 8X lower end-to-end\nlatency) and reduces energy consumption by 25% (while serving 19% more\nrequests) during periods of congestion for a summarization workload."}
{"id": "2510.15355", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.15355", "abs": "https://arxiv.org/abs/2510.15355", "authors": ["Tim Kraus", "Axel Sauer", "Ingo Feldner"], "title": "Cloud-Enabled Virtual Prototypes", "comment": "8 pages, 5 figures, Published in DVCon Europe 2025", "summary": "The rapid evolution of embedded systems, along with the growing variety and\ncomplexity of AI algorithms, necessitates a powerful hardware/software\nco-design methodology based on virtual prototyping technologies. The market\noffers a diverse range of simulation solutions, each with its unique\ntechnological approach and therefore strengths and weaknesses. Additionally,\nwith the increasing availability of remote on-demand computing resources and\ntheir adaptation throughout the industry, the choice of the host infrastructure\nfor execution opens even more new possibilities for operational strategies.\nThis work explores the dichotomy between local and cloud-based simulation\nenvironments, focusing on the trade-offs between scalability and privacy. We\ndiscuss how the setup of the compute infrastructure impacts the performance of\nthe execution and security of data involved in the process. Furthermore, we\nhighlight the development workflow associated with embedded AI and the critical\nrole of efficient simulations in optimizing these algorithms. With the proposed\nsolution, we aim to sustainably improve trust in remote simulations and\nfacilitate the adoption of virtual prototyping practices."}
{"id": "2510.15473", "categories": ["cs.DC", "math.PR"], "pdf": "https://arxiv.org/pdf/2510.15473", "abs": "https://arxiv.org/abs/2510.15473", "authors": ["Petra Berenbrink", "Robert Elsässer", "Tom Friedetzky", "Hamed Hosseinpour", "Dominik Kaaser", "Peter Kling", "Thomas Sauerwald"], "title": "(Almost) Perfect Discrete Iterative Load Balancing", "comment": null, "summary": "We consider discrete, iterative load balancing via matchings on arbitrary\ngraphs. Initially each node holds a certain number of tokens, defining the load\nof the node, and the objective is to redistribute the tokens such that\neventually each node has approximately the same number of tokens. We present\nresults for a general class of simple local balancing schemes where the tokens\nare balanced via matchings. In each round the process averages the tokens of\nany two matched nodes. If the sum of their tokens is odd, the node to receive\nthe one excess token is selected at random. Our class covers three popular\nmodels: in the matching model a new matching is generated randomly in each\nround, in the balancing circuit model a fixed sequence of matchings is applied\nperiodically, and in the asynchronous model the load is balanced over a\nrandomly chosen edge.\n  We measure the quality of a load vector by its discrepancy, defined as the\ndifference between the maximum and minimum load across all nodes. As our main\nresult we show that with high probability our discrete balancing scheme reaches\na discrepancy of $3$ in a number of rounds which asymptotically matches the\nspectral bound for continuous load balancing with fractional load.\n  This result improves and tightens a long line of previous works, by not only\nachieving a small constant discrepancy (instead of a non-explicit, large\nconstant) but also holding for arbitrary instead of regular graphs. The result\nalso demonstrates that in the general model we consider, discrete load\nbalancing is no harder than continuous load balancing."}
{"id": "2510.15485", "categories": ["cs.DC", "cs.DB", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2510.15485", "abs": "https://arxiv.org/abs/2510.15485", "authors": ["Dāvis Kažemaks", "Laurens Versluis", "Burcu Kulahcioglu Ozkan", "Jérémie Decouchant"], "title": "Balancing Fairness and Performance in Multi-User Spark Workloads with Dynamic Scheduling (extended version)", "comment": "This paper is an extended version of a paper accepted at the ACM\n  Symposium on Cloud Computing (SoCC'25) that contains a proof of correctness", "summary": "Apache Spark is a widely adopted framework for large-scale data processing.\nHowever, in industrial analytics environments, Spark's built-in schedulers,\nsuch as FIFO and fair scheduling, struggle to maintain both user-level fairness\nand low mean response time, particularly in long-running shared applications.\nExisting solutions typically focus on job-level fairness which unintentionally\nfavors users who submit more jobs. Although Spark offers a built-in fair\nscheduler, it lacks adaptability to dynamic user workloads and may degrade\noverall job performance. We present the User Weighted Fair Queuing (UWFQ)\nscheduler, designed to minimize job response times while ensuring equitable\nresource distribution across users and their respective jobs. UWFQ simulates a\nvirtual fair queuing system and schedules jobs based on their estimated finish\ntimes under a bounded fairness model. To further address task skew and reduce\npriority inversions, which are common in Spark workloads, we introduce runtime\npartitioning, a method that dynamically refines task granularity based on\nexpected runtime. We implement UWFQ within the Spark framework and evaluate its\nperformance using multi-user synthetic workloads and Google cluster traces. We\nshow that UWFQ reduces the average response time of small jobs by up to 74%\ncompared to existing built-in Spark schedulers and to state-of-the-art fair\nscheduling algorithms."}
{"id": "2510.15490", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.15490", "abs": "https://arxiv.org/abs/2510.15490", "authors": ["Diogo Landau", "Gijs Blanken", "Jorge Barbosa", "Nishant Saurabh"], "title": "Retrofitting Service Dependency Discovery in Distributed Systems", "comment": null, "summary": "Modern distributed systems rely on complex networks of interconnected\nservices, creating direct or indirect dependencies that can propagate faults\nand cause cascading failures. To localize the root cause of performance\ndegradation in these environments, constructing a service dependency graph is\nhighly beneficial. However, building an accurate service dependency graph is\nimpaired by complex routing techniques, such as Network Address Translation\n(NAT), an essential mechanism for connecting services across networks. NAT\nobfuscates the actual hosts running the services, causing existing run-time\napproaches that passively observe network metadata to fail in accurately\ninferring service dependencies. To this end, this paper introduces XXXX, a\nnovel run-time system for constructing process-level service dependency graphs.\nIt operates without source code instrumentation and remains resilient under\ncomplex network routing mechanisms, including NAT. XXXX implements a\nnon-disruptive method of injecting metadata onto a TCP packet's header that\nmaintains protocol correctness across host boundaries. In other words, if no\nreceiving agent is present, the instrumentation leaves existing TCP connections\nunaffected, ensuring non-disruptive operation when it is partially deployed\nacross hosts. We evaluated XXXX extensively against three state-of-the-art\nsystems across nine scenarios, involving three network configurations\n(NAT-free, internal-NAT, external-NAT) and three microservice benchmarks. XXXX\nwas the only approach that performed consistently across networking\nconfigurations. With regards to correctness, it performed on par with, or\nbetter than, the state-of-the-art with precision and recall values of 100% in\nthe majority of the scenarios."}
{"id": "2510.15596", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.15596", "abs": "https://arxiv.org/abs/2510.15596", "authors": ["Alicia Golden", "Michael Kuchnik", "Samuel Hsia", "Zachary DeVito", "Gu-Yeon Wei", "David Brooks", "Carole-Jean Wu"], "title": "PRISM: Probabilistic Runtime Insights and Scalable Performance Modeling for Large-Scale Distributed Training", "comment": null, "summary": "Large model training beyond tens of thousands of GPUs is an uncharted\nterritory. At such scales, disruptions to the training process are not a matter\nof if, but a matter of when -- a stochastic process degrading training\nproductivity. Dynamic runtime variation will become increasingly more frequent\nas training scales up and GPUs are operated in increasingly power-limited and\nthermally-stressed environments. At the 64k GPU scale, we already observed 9%\nGPU time variability for frontier foundation model training. To understand\npotential causes of variability, we analyze GPU microbenchmarks at scale across\na variety of platforms, showing up to 14% variation in GPU performance on GEMM\nworkloads depending on training hardware and deployed environment.\n  Motivated by our analysis and the large design space around performance\nvariability, we present PRISM -- a performance modeling framework that\nconsiders the stochastic nature of the large-scale distributed training. The\ncore of PRISM is the statistical method that provides a quantifiable measure\nfor probabilistic guarantees on training time. Using PRISM, we explore the\ndesign and optimization space of distributed training, from parallelization\nmethods to next-generation training systems. PRISM is validated with\nreal-system measurement, showing training time prediction accuracy with 20.8%\nKolmogorov-Smirnov distance. Using PRISM, we demonstrate that, depending on\ncomputation node placement, up to 1.26x performance improvement potential is\navailable if we factor in sensitivities of parallelization strategies to\nvariation. In addition, we use PRISM to identify kernels to optimize for\nreducing performance variability and predict probability of slow-down for\nlarge-scale jobs where variation is magnified. We find optimizing communication\nkernels, such as AllGather and ReduceScatter, contribute most to minimizing\nvariability in training step time."}
{"id": "2510.15652", "categories": ["cs.DC", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.15652", "abs": "https://arxiv.org/abs/2510.15652", "authors": ["Ahmad Raeisi", "Mahdi Dolati", "Sina Darabi", "Sadegh Talebi", "Patrick Eugster", "Ahmad Khonsari"], "title": "GOGH: Correlation-Guided Orchestration of GPUs in Heterogeneous Clusters", "comment": "10 pages, 5 figures", "summary": "The growing demand for computational resources in machine learning has made\nefficient resource allocation a critical challenge, especially in heterogeneous\nhardware clusters where devices vary in capability, age, and energy efficiency.\nUpgrading to the latest hardware is often infeasible, making sustainable use of\nexisting, mixed-generation resources essential. In this paper, we propose a\nlearning-based architecture for managing machine learning workloads in\nheterogeneous clusters. The system operates online, allocating resources to\nincoming training or inference requests while minimizing energy consumption and\nmeeting performance requirements. It uses two neural networks: the first\nprovides initial estimates of how well a new model will utilize different\nhardware types and how it will affect co-located models. An optimizer then\nallocates resources based on these estimates. After deployment, the system\nmonitors real performance and uses this data to refine its predictions via a\nsecond neural network. This updated model improves estimates not only for the\ncurrent hardware but also for hardware not initially allocated and for\nco-location scenarios not yet observed. The result is an adaptive, iterative\napproach that learns over time to make more effective resource allocation\ndecisions in heterogeneous deep learning clusters."}
{"id": "2510.15698", "categories": ["cs.DC"], "pdf": "https://arxiv.org/pdf/2510.15698", "abs": "https://arxiv.org/abs/2510.15698", "authors": ["Sebastian Brandt", "Tim Göttlicher"], "title": "A Post-Quantum Lower Bound for the Distributed Lovász Local Lemma", "comment": "46 pages, 3 figures", "summary": "In this work, we study the Lov\\'asz local lemma (LLL) problem in the area of\ndistributed quantum computing, which has been the focus of attention of recent\nadvances in quantum computing [STOC'24, STOC'25, STOC'25]. We prove a lower\nbound of $2^{\\Omega(\\log^* n)}$ for the complexity of the distributed LLL in\nthe quantum-LOCAL model. More specifically, we obtain our lower bound already\nfor a very well-studied special case of the LLL, called sinkless orientation,\nin a stronger model than quantum-LOCAL, called the randomized online-LOCAL\nmodel. As a consequence, we obtain the same lower bounds for sinkless\norientation and the distributed LLL also in a variety of other models studied\nacross different research communities.\n  Our work provides the first superconstant lower bound for sinkless\norientation and the distributed LLL in all of these models, addressing recently\nstated open questions. Moreover, to obtain our results, we develop an entirely\nnew lower bound technique that we believe has the potential to become the first\ngeneric technique for proving post-quantum lower bounds for many of the most\nimportant problems studied in the context of locality."}
{"id": "2510.15755", "categories": ["cs.DC", "cs.OS"], "pdf": "https://arxiv.org/pdf/2510.15755", "abs": "https://arxiv.org/abs/2510.15755", "authors": ["Atsushi Koshiba", "Charalampos Mainas", "Pramod Bhatotia"], "title": "Funky: Cloud-Native FPGA Virtualization and Orchestration", "comment": "17 pages, ACM Symposium on Cloud Computing (SoCC'25)", "summary": "The adoption of FPGAs in cloud-native environments is facing impediments due\nto FPGA limitations and CPU-oriented design of orchestrators, as they lack\nvirtualization, isolation, and preemption support for FPGAs. Consequently,\ncloud providers offer no orchestration services for FPGAs, leading to low\nscalability, flexibility, and resiliency.\n  This paper presents Funky, a full-stack FPGA-aware orchestration engine for\ncloud-native applications. Funky offers primary orchestration services for FPGA\nworkloads to achieve high performance, utilization, scalability, and fault\ntolerance, accomplished by three contributions: (1) FPGA virtualization for\nlightweight sandboxes, (2) FPGA state management enabling task preemption and\ncheckpointing, and (3) FPGA-aware orchestration components following the\nindustry-standard CRI/OCI specifications.\n  We implement and evaluate Funky using four x86 servers with Alveo U50 FPGA\ncards. Our evaluation highlights that Funky allows us to port 23 OpenCL\napplications from the Xilinx Vitis and Rosetta benchmark suites by modifying\n3.4% of the source code while keeping the OCI image sizes 28.7 times smaller\nthan AMD's FPGA-accessible Docker containers. In addition, Funky incurs only\n7.4% performance overheads compared to native execution, while providing\nvirtualization support with strong hypervisor-enforced isolation and\ncloud-native orchestration for a set of distributed FPGAs. Lastly, we evaluate\nFunky's orchestration services in a large-scale cluster using Google production\ntraces, showing its scalability, fault tolerance, and scheduling efficiency."}
{"id": "2510.15109", "categories": ["cs.NI", "cs.AI", "cs.DC", "cs.LG", "eess.SP"], "pdf": "https://arxiv.org/pdf/2510.15109", "abs": "https://arxiv.org/abs/2510.15109", "authors": ["Utku Demir", "Tugba Erpek", "Yalin E. Sagduyu", "Sastry Kompella", "Mengran Xue"], "title": "Targeted Attacks and Defenses for Distributed Federated Learning in Vehicular Networks", "comment": null, "summary": "In emerging networked systems, mobile edge devices such as ground vehicles\nand unmanned aerial system (UAS) swarms collectively aggregate vast amounts of\ndata to make machine learning decisions such as threat detection in remote,\ndynamic, and infrastructure-constrained environments where power and bandwidth\nare scarce. Federated learning (FL) addresses these constraints and privacy\nconcerns by enabling nodes to share local model weights for deep neural\nnetworks instead of raw data, facilitating more reliable decision-making than\nindividual learning. However, conventional FL relies on a central server to\ncoordinate model updates in each learning round, which imposes significant\ncomputational burdens on the central node and may not be feasible due to the\nconnectivity constraints. By eliminating dependence on a central server,\ndistributed federated learning (DFL) offers scalability, resilience to node\nfailures, learning robustness, and more effective defense strategies. Despite\nthese advantages, DFL remains vulnerable to increasingly advanced and stealthy\ncyberattacks. In this paper, we design sophisticated targeted training data\npoisoning and backdoor (Trojan) attacks, and characterize the emerging\nvulnerabilities in a vehicular network. We analyze how DFL provides resilience\nagainst such attacks compared to individual learning and present effective\ndefense mechanisms to further strengthen DFL against the emerging cyber\nthreats."}
